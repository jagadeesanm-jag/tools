package org.emc.topology.repositories;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.xml.parsers.ParserConfigurationException;
import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;

import org.emc.topology.dataObjects.TopologyXmlData;
import org.springframework.stereotype.Repository;
import org.xml.sax.Attributes;
import org.xml.sax.SAXException;
import org.xml.sax.helpers.DefaultHandler;

import com.google.common.collect.ArrayListMultimap;

@Repository
public class XmlUtilities {

	public TopologyXmlData testXmlData() {
		TopologyXmlData topoXmlData = new TopologyXmlData();
		TopologyXmlData topoXmlDataTst = new TopologyXmlData();
		try {
			ArrayListMultimap<String, List<String>> vArrayStoragepoolMap = ArrayListMultimap
					.create();
			ArrayListMultimap<String, List<String>> vStoragepoolHostMap = ArrayListMultimap
					.create();
	
	
			List<String> vStrPool1 = new ArrayList<String>();
			vStrPool1.add("LAB_VNX2903_VPLEX1_RECOVERPOINT_TARGET");
			vStrPool1.add("LAB_VNX2903_VPLEX1_RECOVERPOINT_SOURCE");
			vStrPool1.add("LAB_VNX2903_VPLEX1_VPOOL");
			vArrayStoragepoolMap.put("LAB_VARRAY_CLUSTER1", vStrPool1);
	
			List<String> vStrPool2 = new ArrayList<String>();
			List<String> hostPool2 = new ArrayList<String>();
			vStrPool2.add("LAB_VNX_4981");
			vStrPool2.add("vpooool");
			vArrayStoragepoolMap.put("LAB_VNX_4981", vStrPool2);
			hostPool2.add("10.247.139.65");
			hostPool2.add("10.247.139.143");
			hostPool2.add("10.247.139.65");
			vStoragepoolHostMap.put("LAB_VNX_4981", hostPool2);
	
			List<String> vStrPool3 = new ArrayList<String>();
			List<String> hostPool3 = new ArrayList<String>();
			vStrPool3.add("LAB_VNX2903_VPOOL");
			vArrayStoragepoolMap.put("LAB_VNX2903", vStrPool3);
			hostPool3.add("dummy.emc.com");
			vStoragepoolHostMap.put("LAB_VNX2903_VPOOL", hostPool3);
	
			topoXmlData.setvArrayStoragepoolMap(vArrayStoragepoolMap);
			topoXmlData.setvStoragepoolHostMap(vStoragepoolHostMap);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return topoXmlDataTst;
	}

	/*
	 * Parses the XML and prepares data necessary to generate topology. 
	 * */
	public TopologyXmlData parseXml() {
		TopologyXmlData topoXmlData = new TopologyXmlData();
		try{
			final ArrayListMultimap<String, List<String>> vArrayStoragepoolMap = ArrayListMultimap.create();
			final ArrayListMultimap<String, List<String>> vStoragepoolHostMap = ArrayListMultimap.create();
			final ArrayListMultimap<String, List<String>> vStoragepoolVolumeMap = ArrayListMultimap.create();

			final List<String> vSpList = new ArrayList<String>();
			final List<String> hostList = new ArrayList<String>();
			final List<String> volumeList = new ArrayList<String>();
			
			SAXParserFactory factory = SAXParserFactory.newInstance();
			SAXParser saxParser = factory.newSAXParser();

			DefaultHandler handler = new DefaultHandler() {

				String vArrayName = "";
				String vSpName = "";
				String hostName = "";
				String volumeName = "";
				public void startElement(String uri, String localName,
						String qName, Attributes attributes) throws SAXException {

					if (qName.equalsIgnoreCase("varray")) {
						vArrayName = attributes.getValue("name");
					}

					if (qName.equalsIgnoreCase("vStoragePool")) {
						vSpName = attributes.getValue("name");
						vSpList.add(vSpName);
					}

					if (qName.equalsIgnoreCase("volume")) {
						volumeName = attributes.getValue("name");
						volumeList.add(volumeName);
					}
					if (qName.equalsIgnoreCase("host")) {
						hostName = attributes.getValue("name");
						hostList.add(hostName);
					}
				}

				public void endElement(String uri, String localName, String qName)
						throws SAXException {

					if (qName.equalsIgnoreCase("vArray")) {
						if(!vSpList.isEmpty()){
							vArrayStoragepoolMap.put(vArrayName, new ArrayList<String>(vSpList));
						}
						// Reset vArrayName and vSpList
						vArrayName = "";
						vSpList.clear();
					}
					
					if (qName.equalsIgnoreCase("vStoragePool")) {
						if(!hostList.isEmpty()){
							vStoragepoolHostMap.put(vSpName, new ArrayList<String>(hostList));
						}
						if(!volumeList.isEmpty()){
							vStoragepoolHostMap.put(vSpName, new ArrayList<String>(hostList));
						}
						// Reset vSpName and hostList
						vSpName = "";
						hostList.clear();
					}
				}
			};

			saxParser.parse("C:\\Hackathon\\topology.xml", handler);
			//saxParser.parse("/opt/CoprHD/Topology/topology.xml", handler);
			topoXmlData.setvArrayStoragepoolMap(vArrayStoragepoolMap);
			topoXmlData.setvStoragepoolHostMap(vStoragepoolHostMap);
		} catch(Exception e){
			e.printStackTrace();
		}
		
		return topoXmlData;

	}
}
